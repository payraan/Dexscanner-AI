"""Add signal_results table

Revision ID: 347b80404f1a
Revises: b8d05679340c
Create Date: 2025-08-28 19:41:32.634562

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '347b80404f1a'
down_revision: Union[str, Sequence[str], None] = 'b8d05679340c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('signal_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alert_id', sa.Integer(), nullable=False),
    sa.Column('token_address', sa.String(), nullable=False),
    sa.Column('token_symbol', sa.String(), nullable=True),
    sa.Column('signal_price', sa.Float(), nullable=False),
    sa.Column('peak_price', sa.Float(), nullable=True),
    sa.Column('profit_percentage', sa.Float(), nullable=True),
    sa.Column('before_chart_file_id', sa.String(), nullable=False),
    sa.Column('after_chart_file_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('is_rugged', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('captured_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['alert_id'], ['alerts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('alert_id')
    )
    op.create_index(op.f('ix_signal_results_status'), 'signal_results', ['status'], unique=False)
    op.create_index(op.f('ix_signal_results_token_address'), 'signal_results', ['token_address'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_signal_results_token_address'), table_name='signal_results')
    op.drop_index(op.f('ix_signal_results_status'), table_name='signal_results')
    op.drop_table('signal_results')
    # ### end Alembic commands ###
